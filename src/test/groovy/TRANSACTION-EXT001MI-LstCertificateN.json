{"programModules":{"EXT001MI":{"program":"EXT001MI","triggers":{},"transactions":{"LstCertificateN":{"sourceUuid":"6c395770-5bdb-4a83-8fd5-a5216fee71bb","name":"LstCertificateN","program":"EXT001MI","description":"Lst Certificate Numbers For PIM","active":true,"multi":false,"modified":1641428141635,"modifiedBy":"MOSHAR05","outputFields":[{"name":"ITNO","description":"item number","length":15,"mandatory":false,"type":"A"},{"name":"ATID","description":"Attribute Identity","length":3000,"mandatory":false,"type":"A"},{"name":"AALF","description":"From Attribute Value","length":3000,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONO","description":"company","length":3,"mandatory":true,"type":"N"},{"name":"ITNO","description":"Item Number","length":15,"mandatory":true,"type":"A"}],"utilities":[]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"6c395770-5bdb-4a83-8fd5-a5216fee71bb":{"uuid":"6c395770-5bdb-4a83-8fd5-a5216fee71bb","updated":1673893491139,"updatedBy":"MOSHAR05","created":1639233009321,"createdBy":"MOSHAR05","apiVersion":"0.15","beVersion":"16.0.0.20221110165802","language":"GROOVY","codeHash":"4605906C25527BA5CC73A6BAD7886CD78884421C05B85A8A4567067ADED5F238","code":""}}}